name: Release

env:
  DIST_DIR: dist
  # AWS_PLUGIN_TARGET: #TODO
  ARTIFACT_NAME: dist
    # See: https://github.com/actions/setup-python/tree/v2#available-versions-of-python
  PYTHON_VERSION: "3.7"

on:
  push:
    # tags:
    #   - "[0-9]+.[0-9]+.[0-9]+*" # enable it at the end of developement

jobs:
  build:
    strategy:
      fail-fast: false #TODO remove, here only 4 developement
      matrix:
        os: [windows-latest, ubuntu-18.04, macos-10.15]
        python_arch: [x64]
        include:
          - os: windows-latest
            package_platform: Windows_32bit
            python_arch: x86
          - os: windows-latest
            package_platform: Windows_64bit
          - os: ubuntu-18.04
            package_platform: Linux_64bit
            archive_util: tar
          - os: macos-10.15
            package_platform: macOS_64bit
            archive_util: gtar # https://github.com/actions/virtual-environments/issues/2619
    defaults:
      run:
        shell: bash
  
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout mcuboot repository
        uses: actions/checkout@v2
        with:
          repository: mcu-tools/mcuboot
          path: mcuboot
          ref: v1.8.0 # the patches apply only to this version

      - name: Checkout imgtool-packing repository
        uses: actions/checkout@v2
        with:
          path: imgtool-packing

      - name: Apply patches
        working-directory: ${{ github.workspace }}/mcuboot/scripts/
        run: git apply -v ../../imgtool-packing/patches/* #apparently windows does not expand correclty ${{ github.workspace }} for some obscure reason 

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: ${{ matrix.python_arch }}

      - name: Upgrade PIP
        run: python -m pip install --upgrade pip setuptools wheel

      # - name: Display Python version
      #   run: python --version

      - name: Display PIP version
        run: pip --version

      - name: Install python dependencies
        working-directory: ${{ github.workspace }}/mcuboot/scripts/
        run: pip install -r requirements.txt

      - name: Install pyinstaller
        run: pip install pyinstaller

      # - name: Display Pyinstaller version 
      #   run: pyinstaller --version

      - name: Build & Package
        if: matrix.os == 'windows-latest'
        working-directory: ${{ github.workspace }}/mcuboot/scripts/imgtool
        run: |
          pyinstaller --onefile main.py -n imgtool.exe
          cd ${{ env.DIST_DIR }}
          7z a imgtool_0.0.1_${{ matrix.package_platform }}.zip imgtool.exe ../../../../imgtool-packing/LICENSE.txt #apparently windows does not expand correclty ${{ github.workspace }} for some obscure reason 

      - name: Build & Package
        if: matrix.os != 'windows-latest'
        working-directory: ${{ github.workspace }}/mcuboot/scripts/imgtool
        run: |
          pyinstaller --onefile main.py -n imgtool
          cd ${{ env.DIST_DIR }}
          ${{ matrix.archive_util }} -cz -C ./ imgtool -C ${{ github.workspace }}/imgtool-packing/ LICENSE.txt -f imgtool_0.0.1_${{ matrix.package_platform }}.tar.gz

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: ${{ env.ARTIFACT_NAME }}
          path: mcuboot/scripts/imgtool/dist/imgtool_*

  build-crosscompile:
    strategy:
      fail-fast: false #TODO remove, here only 4 developement
      matrix:
        package_platform: [Linux_32bit, Linux_ARMv6, Linux_ARMv7, Linux_ARM64]
        include:
          - package_platform: Linux_32bit
            docker_image: i386/python:3.7-buster
          - package_platform: Linux_ARMv6
            docker_image: arm32v5/python:3.7-buster # buster is not available for arm32v6, but should be backward compatible
          - package_platform: Linux_ARMv7
            docker_image: arm32v7/python:3.7-buster # PyInstaller does not include a pre-compiled bootloader for your platform
          - package_platform: Linux_ARM64
            docker_image: arm64v8/python:3.7-buster

    runs-on: ubuntu-latest
    steps:
      - name: Checkout mcuboot repository
        uses: actions/checkout@v2
        with:
          repository: mcu-tools/mcuboot
          path: mcuboot
          ref: v1.8.0 # the patches apply only to this version

      - name: Checkout imgtool-packing repository
        uses: actions/checkout@v2
        with:
          path: imgtool-packing

      - name: Apply patches
        working-directory: ${{ github.workspace }}/mcuboot/scripts/
        run: git apply -v ../../imgtool-packing/patches/*

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      
      - name: Copy build script
        working-directory: ${{ github.workspace }}/imgtool-packing
        run: cp build.sh ${{ github.workspace }}/mcuboot/scripts/imgtool/

      # Docker containers used to crosscompile:
      # https://github.com/docker-library/official-images#architectures-other-than-amd64
      - name: ls workspace
        working-directory: ${{ github.workspace }}/mcuboot/scripts
        run:  docker run -v "$(pwd)":/workspace ${{ matrix.docker_image }} ls workspace

      - name: Build
        working-directory: ${{ github.workspace }}/mcuboot/scripts
        run: docker run -v "$(pwd)":/workspace ${{ matrix.docker_image }} ./workspace/imgtool/build.sh

      - name: Package
        working-directory: ${{ github.workspace }}/mcuboot/scripts/imgtool/${{ env.DIST_DIR }}
        run: sudo tar cz -C ./ imgtool -C ${{ github.workspace }}/imgtool-packing/ LICENSE.txt -f imgtool_0.0.1_${{ matrix.package_platform }}.tar.gz #dist dir is created in the container with different user/grp

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: ${{ env.ARTIFACT_NAME }}
          path: mcuboot/scripts/imgtool/dist/imgtool_*

      # NOTARIZATION & RELEASE
